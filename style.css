:root {
    --slot-width: 128px;
    --slot-height: 256px;
    --gap: 1px;
}

body {
    font-family: sans-serif;
    background: #000; /* Set background to black */
    color: #fff; /* Set text color to white for contrast */
}

.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 32px;
    padding: 20px;
    max-width: 1200px;
    margin: 0 auto;
}

.board {
    display: flex;
    width: calc((var(--slot-width) + var(--gap)) * 10);
    min-height: var(--slot-height);
    border-radius: 8px;
    background: rgba(255, 255, 255, 0.1); /* Light gray for contrast */
    position: relative;
}

.slot {
    width: var(--slot-width);
    min-height: var(--slot-height);
    position: relative;
    display: flex;
    align-items: center;
}

.slot:last-child {
    border-right: none;
}


.item {
    position: absolute;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.2s, box-shadow 0.2s;
    height: var(--slot-height);
    background: #333; /* Dark gray for items */
    box-shadow: 0 2px 4px rgba(255, 255, 255, 0.2); /* Light shadow */
}

.item-image-container {
    width: 100%;
    height: 100%;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
}

.item-image {
    width: 100%;
    height: 100%;
    object-fit: fill;
    transform: scale(1.2);
    object-position: center;
    display: block;
}

/* Size-specific styles with exact dimensions */
.size-1 {
    width: var(--slot-width);
}

.size-2 {
    width: calc(var(--slot-width) * 2);
}

.size-3 {
    width: calc(var(--slot-width) * 3);
}

.size-1 .item-image {
    transform: scale(1);
}

.size-2 .item-image {
    transform: scale(1.2);
}

.size-3 .item-image {
    transform: scale(1, 1);
}

.size-2 .item-image-container {
    grid-column: span 2;
}

.size-3 .item-image-container {
    grid-column: span 3;
}

.item-content {
    display: none;
}

.item-name {
    position: absolute;
    top: 8px;
    width: fit-content;
    margin: 0 auto;
    background: rgba(0, 0, 0, 0.233); /* Light gray background */
    color: #fff; /* White text */
    padding: 4px 8px;
    border-radius: 4px;
    font-weight: bold;
    z-index: 2;
    left: 0;
    right: 0;
    text-align: center;
}

.stat-damage { color: #ff4444; }
.stat-shield { color: #44aaff; }
.stat-heal { color: #44ff44; }
.stat-effect { color: #ffaa44; }

.monster-board .item {
    border: 2px solid #ffffff5d;
}

.player-board .item {
    border: 2px solid #ffffff5d;
}

.search-section {
    width: 80%;
    margin: 20px auto;
    position: relative;
}

#search-input {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    background: #222; /* Darker background for input */
    color: #fff; /* White text */
    border: 1px solid rgba(255, 255, 255, 0.2); /* Light border */
}

#search-results {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: #111; /* Dark background for results */
    border: 1px solid rgba(255, 255, 255, 0.2); /* Light border */
    max-height: 300px;
    overflow-y: auto;
}

.search-result-item {
    padding: 10px;
    cursor: pointer;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1); /* Light border */
    color: #fff; /* White text */
}

.search-result-item:hover {
    background-color: rgba(255, 255, 255, 0.1); /* Highlight on hover */
}

/* Add to existing CSS */
.combat-section {
    width: 80%;
    margin: 20px auto;
    text-align: center;
}

#simulate-combat {
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    background: #444; /* Dark gray button */
    color: #fff; /* White text */
    border: 1px solid rgba(255, 255, 255, 0.2); /* Light border */
}

#simulate-combat:hover {
    background: #555; /* Slightly lighter gray on hover */
}

.combat-summary {
    margin-top: 20px;
    padding: 15px;
    border: 1px solid rgba(255, 255, 255, 0.2); /* Light border */
    border-radius: 4px;
    background: #222; /* Dark gray background */
    color: #fff; /* White text */
}

.combat-summary h3 {
    margin-top: 0;
}

#combat-log {
    width: 100%;
    height: 300px;
    margin-top: 20px;
    padding: 10px;
    border: 1px solid rgba(255, 255, 255, 0.2); /* Light border */
    overflow-y: auto;
    font-family: monospace;
    text-align: left;
    background: #111; /* Dark background */
    color: #fff; /* White text */
}

.log-entry {
    margin: 2px 0;
    padding: 2px 5px;
}

.log-damage { color: #ff4444; }
.log-heal { color: #44ff44; }
.log-shield { color: #fff344; }
.log-freeze { color: #00bcd4; }
.log-trigger { color: #ffbcf9; }
.log-state { color: #e0e0e0; }
.log-poison { color: #00ff00; }
.log-burn { color: #ffa500; }

.enchantment-section {
    display: none;
}

.item-enchant-button {
    position: absolute;
    top: 8px;
    right: 8px;
    background: rgba(255, 255, 255, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.4);
    border-radius: 4px;
    padding: 4px 8px;
    cursor: pointer;
    z-index: 10;
    font-size: 16px;
}

.item-enchant-button:hover {
    background: rgba(255, 255, 255, 0.9);
}

.enchantment-dropdown {
    position: fixed;
    background: #222;
    color: #fff;
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 4px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.8);
    z-index: 2000;
    max-height: 300px;
    overflow-y: auto;
    display: none;
    min-width: 180px;
    padding: 4px 0;
}

.enchantment-dropdown.active {
    display: block;
}

.enchantment-option {
    padding: 8px 16px;
    cursor: pointer;
    white-space: normal;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1); /* Subtle divider */
    color: #fff; /* White text */
}

.enchantment-option:last-child {
    border-bottom: none;
}

.enchantment-option:hover {
    background: rgba(255, 255, 255, 0.2); /* Stronger highlight on hover */
}

.enchantment-option.selected {
    background: #4CAF50; /* Green background for selected option */
    color: #fff; /* White text */
}

/* Hide the enchantment sparkle on enchanted items since we have the button */
.item.enchanted::after {
    display: none;
}

/* Add enchantment border colors */
.item.enchanted-heavy { border-color: #803500; }
.item.enchanted-icy { border-color: #0080e9; }
.item.enchanted-turbo { border-color: #00ffb3; }
.item.enchanted-shielded { border-color: #f3de21; }
.item.enchanted-restorative { border-color: #3fb643; }
.item.enchanted-toxic { border-color: #25790c; }
.item.enchanted-fiery { border-color: #ff9f22; }
.item.enchanted-shiny { border-color: #ffc6d9; }
.item.enchanted-deadly { border-color: #cc0e00; }
.item.enchanted-radiant { border-color: #fa00fa; }
.item.enchanted-obsidian { border-color: #5e0000; }

/* Update enchantment dropdown styles */
.enchantment-option.remove-enchant {
    border-top: 1px solid #eee;
    color: #f44336;
    font-weight: bold;
}

/* Update remove button styles */
.item-remove-button {
    position: absolute;
    top: 8px;
    left: 8px;
    background: rgba(255, 0, 0, 0.8);
    color: white;
    border: none;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    line-height: 24px;
    text-align: center;
    cursor: pointer;
    z-index: 10;
    font-size: 16px;
    font-weight: bold;
}

.item-remove-button:hover {
    background: rgba(255, 0, 0, 1);
}

/* Update tooltip styles */
.enchantment-tooltip {
    visibility: hidden;
    position: fixed;
    background: rgba(0, 0, 0, 0.9);
    color: white;
    padding: 8px 12px;
    border-radius: 4px;
    font-size: 12px;
    white-space: pre-line;
    width: max-content;
    max-width: 200px;
    z-index: 1000;
    pointer-events: none;
}

.enchantment-tooltip::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    border-width: 5px;
    border-style: solid;
    border-color: rgba(0, 0, 0, 0.9) transparent transparent transparent;
}

.enchantment-name:hover .enchantment-tooltip {
    visibility: visible;
}

.enchantment-effect {
    color: #4CAF50;
    margin-left: 12px;
}

.enchantment-remove {
    color: #f44336;
    font-weight: bold;
    font-size: 18px;
    cursor: pointer;
    padding: 0 4px;
    margin-left: 8px;
}

.enchantment-remove:hover {
    color: #d32f2f;
}

.enchantment-option.selected {
    background: #e3f2fd;
    color: #1976d2;
}

.log-group {
    margin-bottom: 16px;
    padding: 8px;
    background: rgba(0, 0, 0, 0.03);
    border-radius: 4px;
}

.log-timestamp {
    font-weight: bold;
    color: #666;
    border-bottom: 1px solid #ddd;
    margin-bottom: 4px;
    padding-bottom: 4px;
}

.log-status {
    margin-top: 8px;
    padding-top: 8px;
    border-top: 1px dashed #ddd;
}

.item-stats {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.356);
    color: white;
    padding: 8px;
    font-size: 12px;
    line-height: 1.4;
    white-space: pre-line;
}

@media (max-width: 768px) {
    body {
        transform: scale(0.3) rotate(90deg);
        transform-origin: center;
        width: 125%;
        height: 125%;
        overflow: hidden;
    }

    .monster-board {
        left: -960px;
        transform: scale(1.5);
        top: 130px;
    }

    .player-board {
        left: -960px;
        transform: scale(1.5);
        top: 250px;
    }
}

/* Add styles for the monster selection section */
.monster-selection {
    width: 80%;
    margin: 10px auto;
    text-align: center;
    padding: 10px;
    border-radius: 8px;
    background: rgba(255, 255, 255, 0.1);
}

.monster-selection h3 {
    margin-top: 0;
    color: #fff;
    font-size: 18px;
}

#monster-select {
    padding: 8px 12px;
    background: #222;
    color: #fff;
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 4px;
    font-size: 16px;
    width: 200px;
    cursor: pointer;
}

#monster-select option {
    background: #333;
}

#monster-select:focus {
    outline: none;
    border-color: rgba(255, 255, 255, 0.4);
}

.monster-name {
    font-size: 24px;
    font-weight: bold;
    color: #fff;
    text-align: center;
    margin-bottom: 10px;
    padding: 5px;
    background: rgba(255, 0, 0, 0.2);
    border-radius: 4px;
}

/* Add this to prevent slots that are continuations from accepting new items */
.slot.continuation {
    pointer-events: none;
}

/* Fix the issue with items not spanning multiple slots */
.item.size-2 {
    width: calc((var(--slot-width) * 2) - 2px);
    z-index: 5;
}

.item.size-3 {
    width: calc((var(--slot-width) * 3) - 2px);
    z-index: 5;
}

